---
og:
  template: "generic"
---
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>{{ title }} - James Little</title>
  <link rel="icon" href="/favicon.png" />
  <link rel="alternate" href="/feed.xml" type="application/atom+xml" />
  <link rel="preconnect" href="https://files.jameslittle.me/" />
  <link rel="preconnect" href="https://img.jameslittle.me/" />
  <link rel="preconnect" href="https://rsms.me/" />
  <link rel="stylesheet" href="{{cssUrl}}" />
  <meta name="generator" content="{{ eleventy.generator }}" />
  {% getBundle "html", "head" %} 
  <style>{% getBundle "css" %}</style>
  {% if og.template == "generic" %}
  {% ogImage "./og/og-image-generic.og.njk"  %}
  {% elif og.template == "title" %}
  {% ogImage "./og/og-image-title.og.njk", {title: title, deck: og.deck } %}
  {% endif %}
</head>

<body>
  <header class="full-width-capsule">
    {% if page.url != "/" %}
      <h1><a href="/">jameslittle.me</a></h1>
    {% endif %}
    <nav>
      <ul>
        <li><a href="/blog">Blog</a></li>
        <li><a href="/projects">Projects</a></li>
        <li><a href="/photos">Photos</a></li>
        <li><a href="/read">Read</a></li>
        <li><a href="/guestbook">Guestbook</a></li>
      </ul>
    </nav>
  </header>

  {% if page.url == "/" %}
  <main class="home">
  {% else %}
  <main>
  {% endif %}
  {{content | safe}}
  </main>

  <footer class="full-width-capsule">
    <p>
      I'd love to chat with you. <a href="mailto:hello@jameslittle.me">Send me an email</a> or find
      me on <a href="https://mastodon.social/@jil" rel="me">Mastodon</a>, <a
        href="https://instagram.com/jameslittle230">Instagram</a>, <a
        href="https://github.com/jameslittle230">GitHub</a>, or <a
        href="https://www.linkedin.com/in/james-little-230/">LinkedIn</a>.
    </p>
    <p>You might also want to read my <a href="https://files.jameslittle.me/resume/JamesLittleSummer2024.pdf">
        Résumé&nbsp;(PDF)
      </a> or subscribe to my <a href="/feed.xml">RSS Feed</a>.
    </p>

    <p>
      This website was made in fits and starts between 2016 and {{ copyrightYear }}. It is written with <a
        href="https://markdoc.dev">Markdoc</a>, is hosted on <a href="https://render.com">Render</a>, and is typeset in
      <a href="https://okaytype.com/alright">Alright</a>, <a href="https://mbtype.com/fonts/equity/">Equity</a>, <a
        href="https://rsms.me/inter/">Inter</a>, and <a href="https://usgraphics.com/products/berkeley-mono">Berkeley Mono</a>.
    </p>

    <div>
      <p>
        Commit
        <code>
          <a href="https://github.com/jameslittle230/jameslittle.me/tree/{{commit}}">
            {{commit | truncate(10, true, "")}}
          </a>
        </code>
      </p>
      <p>
        <button id="dark-theme">Dark mode</button>
        <button id="light-theme">Light mode</button>
        <button id="reset-theme">OS default</button>
      </p>
    </div>
  </footer>

  {% getBundle "html", "foot" %} 

  <script>
    document.documentElement.classList.toggle(
      "dark",
      localStorage.theme === "dark" ||
        (!("theme" in localStorage) && window.matchMedia("(prefers-color-scheme: dark)").matches),
    );

    document.getElementById('light-theme').addEventListener("click", () => {
      localStorage.theme = "light";
      document.documentElement.classList.remove("dark")
    });
    document.getElementById('dark-theme').addEventListener("click", () => {
      localStorage.theme = "dark";
      document.documentElement.classList.add("dark")
    });

    document.getElementById('reset-theme').addEventListener("click", () => {
      localStorage.removeItem("theme");
      document.documentElement.classList.toggle("dark", window.matchMedia("(prefers-color-scheme: dark)").matches)
    });

    const updateCustomViewportWidth = () => {
      document.documentElement.style.setProperty('--vw', `${document.documentElement.clientWidth * 0.01}px`);
    }

    window.addEventListener('resize', () => {
      updateCustomViewportWidth();
    });

    updateCustomViewportWidth();

    // Create a sentinel element that we'll observe
    const sentinel = document.createElement('div');
    sentinel.style.position = 'absolute';  // Not fixed - we want it to scroll with the page
    sentinel.style.top = '0';
    sentinel.style.height = '3px';  // Height represents our threshold
    sentinel.style.width = '1px';
    sentinel.style.pointerEvents = 'none';
    document.body.prepend(sentinel);

    // Create and configure the observer
    const observer = new IntersectionObserver(
      ([entry]) => {
        // When sentinel is NOT intersecting (scrolled out of view), add the class
        document.body.classList.toggle('scrolled', !entry.isIntersecting);
      },
      {
        root: null,  // Use viewport as root
        threshold: 0 // Fire as soon as element starts leaving viewport
      }
    );
    // Start observing the sentinel
    observer.observe(sentinel);
  </script>
  <!-- <script data-goatcounter="https://jil.goatcounter.com/count" async src="//gc.zgo.at/count.js"></script> -->
</body>
</html>
